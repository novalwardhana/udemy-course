// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package simple

import (
	"github.com/google/wire"
)

// Injectors from injection.go:

func InitializedUserController(name string) (*UserController, func()) {
	userRepository, cleanup := NewUserRepository(name)
	userService, cleanup2 := NewUserService(userRepository)
	userController, cleanup3 := NewUserController(userService)
	return userController, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}
}

func InitializedAdminController(name string) (*AdminControllerImpl, func(), error) {
	adminRepositoryImpl, cleanup, err := NewAdminRepository(name)
	if err != nil {
		return nil, nil, err
	}
	adminServiceImpl, cleanup2, err := NewAdminService(adminRepositoryImpl)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	adminControllerImpl, cleanup3, err := NewAdminController(adminServiceImpl)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return adminControllerImpl, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}

// injection.go:

var adminRepository = wire.NewSet(
	NewAdminRepository, wire.Bind(new(AdminRepository), new(*AdminRepositoryImpl)),
)

var adminService = wire.NewSet(
	NewAdminService, wire.Bind(new(AdminService), new(*AdminServiceImpl)),
)
