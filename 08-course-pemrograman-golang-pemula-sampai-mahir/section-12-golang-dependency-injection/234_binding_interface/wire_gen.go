// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package simple

import (
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializedUserService() *UserServiceImpl {
	userRepositoryImpl := NewUserRepository()
	userServiceImpl := NewUserService(userRepositoryImpl)
	return userServiceImpl
}

func InitializedCategoryClass(log bool) *CategoryClassServiceImpl {
	categoryRepositoryImpl := NewCategoryRepository(log)
	classRepositoryImpl := NewClassRepository(log)
	categoryClassServiceImpl := NewCategoryClassService(categoryRepositoryImpl, classRepositoryImpl)
	return categoryClassServiceImpl
}

func InitializedAdminController(log bool) AdminController {
	adminRepositoryImpl := NewAdminRepository(log)
	adminServiceImpl := NewAdminService(adminRepositoryImpl)
	adminController := NewAdminController(adminServiceImpl)
	return adminController
}

// injector.go:

var bindUserRepository = wire.NewSet(
	NewUserRepository, wire.Bind(new(UserRepository), new(*UserRepositoryImpl)),
)

var bindCategoryRepository = wire.NewSet(
	NewCategoryRepository, wire.Bind(new(CategoryRepository), new(*CategoryRepositoryImpl)),
)

var bindClassRepository = wire.NewSet(
	NewClassRepository, wire.Bind(new(ClassRepository), new(*ClassRepositoryImpl)),
)

var bindAdminRepository = wire.NewSet(
	NewAdminRepository, wire.Bind(new(AdminRepository), new(*AdminRepositoryImpl)),
)

var bindAdminService = wire.NewSet(
	NewAdminService, wire.Bind(new(AdminService), new(*AdminServiceImpl)),
)
